<!DOCTYPE html>
<html>

	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
		<meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">
		<title>独尊探霸【独尊科技旗下站】</title>
		<link rel="stylesheet" type="text/css" href="css/bootstrap.min.css" />
		<link rel="stylesheet" type="text/css" href="css/main.css" />
		<link rel="stylesheet" type="text/css" href="css/setoffline.css" />
	</head>

	<body>
		<div class="data_Box clearfix">
			<table class="data-table" border="0">
				<tbody>
					<tr>
						<td class="title"><label>选择服务器：</label></td>
						<td class="content">
							<span>
								<input type="checkbox" id="setSever1" class="setSever" name="setSever"/>
								<label for="setSever1">数据服务器</label>
							</span>
							<span>
								<input type="checkbox" id="setSever2" class="setSever" name="setSever"/>
								<label for="setSever2">配置服务器</label>
							</span>
						</td>
					</tr>
					<tr>
						<td class="title"><label>设置类型：</label></td>
						<td class="content">
							<span>
							<input type="radio" id="setType1" class="setType" name="setType" value="1" checked="checked"/>
							<label for="setType1">有限时间</label>
						</span>
							<span>
							<input type="radio" id="setType2" class="setType" name="setType" value="0"/>
							<label for="setType2">永久下线</label>
						</span>
						</td>
					</tr>
					<tr>
						<td class="title"><label>设置时间：</label></td>
						<td class="content">
							<input type="text" id="setTime-input" placeholder="请输入下线时间" />
							<label for="setTime-input">（分钟）</label>
						</td>
					</tr>
					<tr>
						<td colspan="2">
							<button class="btn btn-primary" id="submitBtn">确定</button>
							<button class="btn btn-default" id="cancelBtn">取消</button>
						</td>
						<td></td>
					</tr>
				</tbody>
			</table>
		</div>

		<script src="js/common/jquery-1.11.0.js" type="text/javascript" charset="utf-8"></script>
		<script src="js/common/bootstrap.min.js" type="text/javascript" charset="utf-8"></script>
		<script src="js/common/layer/layer.js" type="text/javascript" charset="utf-8"></script>
		<script src="js/common/reconnecting-websocket.min.js" type="text/javascript" charset="utf-8"></script>
		<script src="js/detectZoom.js" type="text/javascript" charset="utf-8"></script>
		<script src="js/main.js" type="text/javascript" charset="utf-8"></script>
		<script type="text/javascript">
			(function(win, doc, $) {
				function setoffline(options) {
					this._init(options);
				}
				$.extend(setoffline.prototype, {
					_init: function(options) {
						var self = this;
						self.options = {
							limitTime: "#setType1", //有限时间按钮
							onlyOff: "#setType2", //永久下线按钮
							setTimeInput: "#setTime-input", //设置时间输入框
							submitBtn: "#submitBtn", //确定按钮
							cancelBtn: "#cancelBtn" //取消按钮
						};
						$.extend(true, self.options, options || {});
						self._initDomEvent();
						return self;
					},
					/**
					 * 初始化DOM引用
					 * @method _initDomEvent
					 * @return {CusScrollBar}
					 */
					_initDomEvent: function() {
						var self = this;
						var opts = this.options;
						//webSocket地址
						self.$dUrl = "ws://123.58.43.17:9501";
						self.$cUrl = "ws://103.251.36.122:9511";
						//有限时间按钮对象
						self.$limitTime = $(opts.limitTime);
						//永久下线按钮对象
						self.$onlyOff = $(opts.onlyOff);
						//设置时间输入框对象
						self.$setTimeInput = $(opts.setTimeInput);
						//确定按钮对象
						self.$submitBtn = $(opts.submitBtn);
						//取消按钮对象
						self.$cancelBtn = $(opts.cancelBtn);
						/*初始化*/
						self._initDomBindEvent();
					},
					/**
					 * 初始化DOM绑定事件
					 * @return {[Object]} [this]
					 * */
					_initDomBindEvent: function() {
						var self = this;
						//点击"有限时间"按钮事件绑定
						self.$limitTime.click(function() {
							self.$setTimeInput.val("");
							self.$setTimeInput.attr("disabled", false);
						});
						//点击"永久下线"按钮事件绑定
						self.$onlyOff.click(function() {
							self.$setTimeInput.val("");
							self.$setTimeInput.attr("disabled", true);
						});
						//点击"确定"按钮事件绑定
						self.$submitBtn.click(function(e) {
							e.preventDefault();
							self.submitEvent();
						});
						//点击"取消"按钮事件绑定
						self.$cancelBtn.click(function(e) {
							e.preventDefault();
							var index = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引
							parent.layer.close(index); //再执行关闭   
							return false;
						});
					},
					/**
					 * webSocket请求
					 * @param url 接口分支
					 * @param param 请求参数
					 */
					webSocketEvent: function(url, param, fn) {
						if("WebSocket" in window) {
							var ws = new ReconnectingWebSocket(url);
							ws.onopen = function() {
								// Web Socket 已连接上，使用 send() 方法发送数据
								ws.send(JSON.stringify(param));
							};
							ws.onmessage = function(res) {
								fn(res.data);
							};
							ws.onclose = function() {
								// 关闭 websocket
								ws.close();
								console.log("连接已关闭...");
							};
							//监听窗口关闭事件，当窗口关闭时，主动去关闭websocket连接，防止连接还没断开就关闭窗口，server端会抛异常。
							window.onbeforeunload = function() {
								ws.close();
							};
						} else {
							console.log("游览器不支持WebSocket!")
						}
					},
					//获取本地缓存里的id
					getSessionDeviceId: function() {
						var deviceId = sessionStorage.getItem("deviceId");
						if(deviceId == null) {
							layer.open({
								type: 0,
								content: "需指定查询的设备",
								yes: function() {
									var index = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引
									parent.layer.close(index); //再执行关闭   
									return false;
								},
								cancel: function() {
									var index = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引
									parent.layer.close(index); //再执行关闭   
									return false;
								}
							})
						} else {
							return deviceId;
						}
					},
					//提交按钮事件
					submitEvent: function() {
						var self = this;
						//获取选择的服务器
						var check1 = $("#setSever1").is(':checked');
						var check2 = $("#setSever2").is(':checked');
						if(check1 == false && check2 == false) {
							layer.alert("请选择服务器！");
							return false;
						};
						//获取选择的类型
						var setType = $(".setType:checked").val();
						//获取设置时间
						var getTime = self.$setTimeInput.val();
						if(setType == "0") {
							var obj = {
								data: 0,
								cfg: 0
							};
						} else {
							var obj = {
								data: 65535,
								cfg: 65535
							};
							var reg = /\d+/g;
							var result = reg.test(getTime);
							if(result == false) {
								layer.alert("请输入正确的时间！");
								return false;
							};
							if(check1 == true) {
								obj.data = parseInt(getTime)
							};
							if(check2 == true) {
								obj.cfg = parseInt(getTime)
							};
						};
						//获取设备ID
						var did = self.getSessionDeviceId();
						var param = {
							type: 'command',
							command: 'setoffline',
							deviceid: did,
							data: obj
						};
						//再次确认
						layer.confirm('确定要进行设置吗？', {
							btn: ['确定', '取消'] //按钮
						}, function() {
							self.webSocketEvent(self.$cUrl, param, function(res) {
								var obj = JSON.parse(res);
								if(obj.type == "setoffline") {
									if(obj.status == 1) {
										layer.alert(obj.message);
									} else {
										layer.alert(obj.message);
										return false;
									}
								}
							});
						});
					}
				});
				win.setoffline = setoffline;
			})(window, document, jQuery);
			new setoffline();
		</script>
	</body>

</html>